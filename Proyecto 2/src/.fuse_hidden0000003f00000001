#include "boost_poly.h"
#include <complex>
#include <iostream>

using namespace boost::math::tools;

int main(){
	std::complex<double> root = -3.0;

	polynomial<std::complex<double>> const a{{-6.0, 1.0, 1.0}};
	polynomial<std::complex<double>> const b{{3.0, 1.0, 0.0}};

	polynomial<std::complex<double>> c;
	polynomial<std::complex<double>> d = divide(a, b, c);

	polynomial<std::complex<double>> def = deflate(a, root);
	
	
	if(!c.is_zero()){
		std::cout << "Residuo: ";
		for (int i=0; i < c.degree() + 1; i++)
				std::cout << c[i] << ", ";
		std::cout << std::endl;
	}

	if(!d.is_zero()){
		std::cout << "Cociente div: ";
		for (int i=0; i < d.degree() + 1; i++)
				std::cout << d[i] << ", ";
		std::cout << std::endl;
	}

	if(!def.is_zero()){
		std::cout << "Cociente def: ";
		for (int i=0; i < def.degree() + 1; i++)
				std::cout << def[i] << ", ";
		std::cout << std::endl;
	}

	return 0;
}